if(!Array.prototype.indexOf){Array.prototype.indexOf=function(c){if(this==null){throw new TypeError()}var d=Object(this);var a=d.length>>>0;if(a===0){return -1}var e=0;if(arguments.length>0){e=Number(arguments[1]);if(e!=e){e=0}else{if(e!=0&&e!=Infinity&&e!=-Infinity){e=(e>0||-1)*Math.floor(Math.abs(e))}}}if(e>=a){return -1}var b=e>=0?e:Math.max(a-Math.abs(e),0);for(;b<a;b++){if(b in d&&d[b]===c){return b}}return -1}}(function(b){var a=function(f,c,h){var j=/^([a-zA-Z]+)(\.[a-zA-Z]*)*$/,g,e,d;if(f.match(j)===null||f==="window"){throw new Error("namespace: "+f+" is a malformed namespace string")}if(c!==undefined&&h===undefined){if(typeof(c)==="function"){h=c;c=undefined}else{if(typeof(c)==="object"){throw new Error("namespace: if second argument exists, final function argument must exist")}else{if(typeof(c)!=="object"){throw new Error("namespace: second argument must be an object of aliased local namespaces")}}}}else{if(typeof(c)!=="object"&&typeof(h)==="function"){throw new Error("namespace: second argument must be an object of aliased local namespaces")}}g=f.split(".");if(g[0]==="window"){e=window}else{e=(window[g[0]]===undefined)?window[g[0]]={}:window[g[0]]}if(h!==undefined&&typeof(h)!=="function"){throw new Error("namespace: last parameter must be a function that accepts a namespace parameter")}for(d=1;d<g.length;d=d+1){if(e[g[d]]===undefined){e[g[d]]={}}e=e[g[d]]}if(c===undefined&&h){h(e)}else{if(h){for(d in c){if(c.hasOwnProperty(d)){c[d]=a(c[d])}}h.call(c,e)}}return e};return a(b,function(c){c.namespace=a})}("window.jermaine.util"));window.jermaine.util.namespace("window.jermaine.util",function(a){var b=function(){var d=this,c={};this.on=function(e,f){if(typeof(e)!=="string"){throw new Error("EventEmitter: first argument to 'on' should be a string")}if(typeof(f)!=="function"){throw new Error("EventEmitter: second argument to 'on' should be a function")}if(!c[e]){c[e]=[]}c[e].push(f);return d};this.addListener=this.on;this.once=function(e,h){var g=function(){h(arguments);d.removeListener(e,g)};d.on(e,g);return d};this.removeListener=function(f,g){var e;if(typeof(f)!=="string"){throw new Error("EventEmitter: first parameter to removeListener method must be a string representing an event")}if(typeof(g)!=="function"){throw new Error("EventEmitter: second parameter must be a function to remove as an event listener")}e=c[f].indexOf(g);if(e!==-1){c[f].splice(e,1)}return d};this.removeAllListeners=function(e){if(typeof(e)!=="string"){throw new Error("EventEmitter: parameter to removeAllListeners should be a string representing an event")}if(c[e]!==undefined){c[e]=[]}return d};this.setMaxListeners=function(e){return d};this.listeners=function(e){if(typeof(e)!=="string"){throw new Error("EventEmitter: listeners method must be called with the name of an event")}else{if(c[e]===undefined){return[]}}return c[e]};this.emit=function(f,g){var e,h;if(arguments.length>1){h=[]}for(e=1;e<arguments.length;++e){h.push(arguments[e])}if(c[f]!==undefined){for(e=0;e<c[f].length;e=e+1){c[f][e].apply(this,h)}}};return d};a.EventEmitter=b});window.jermaine.util.namespace("window.jermaine",function(c){var d=this,b,a={};b=function(e){var f=function(h){var g,j={},i;g=e.call(j,h);if(!g){i=j.message||"validator failed with parameter "+h;throw new Error(i)}return g};return f};b.addValidator=function(f,e){if(f===undefined||typeof(f)!=="string"){throw new Error("addValidator requires a name to be specified as the first parameter")}if(e===undefined||typeof(e)!=="function"){throw new Error("addValidator requires a function as the second parameter")}if(a[f]===undefined){a[f]=function(g){return new b(function(j){var i={actual:j,param:j},h=e.call(i,g);this.message=i.message;return h})}}else{throw new Error("Validator '"+f+"' already defined")}};b.getValidator=function(f){var e;if(f===undefined){throw new Error("Validator: getValidator method requires a string parameter")}else{if(typeof(f)!=="string"){throw new Error("Validator: parameter to getValidator method must be a string")}}e=a[f];if(e===undefined){throw new Error("Validator: '"+f+"' does not exist")}return e};b.validators=function(){var f,e=[];for(f in a){if(a.hasOwnProperty(f)){e.push(f)}}return e};b.addValidator("isGreaterThan",function(e){this.message=this.param+" should be greater than "+e;return this.param>e});b.addValidator("isLessThan",function(e){this.message=this.param+" should be less than "+e;return this.param<e});b.addValidator("isA",function(f){var e=["string","number","boolean","function","object"];if(typeof(f)==="string"&&e.indexOf(f)>-1){this.message=this.param+" should be a "+f;return typeof(this.param)===f}else{if(f==="integer"){if(this.param.toString!==undefined){this.message=this.param.toString()+" should be an integer"}else{this.message="parameter should be an integer"}return(typeof(this.param)==="number")&&(parseInt(this.param,10)===this.param)}else{if(typeof(f)==="string"){throw new Error("Validator: isA accepts a string which is one of "+e)}else{throw new Error("Validator: isA only accepts a string for a primitive types for the time being")}}}});a.isAn=a.isA;b.addValidator("isOneOf",function(e){this.message=this.param+" should be one of the set: "+e;return e.indexOf(this.param)>-1});c.Validator=b});window.jermaine.util.namespace("window.jermaine",function(b){var a={};var c=function(g){var j=[],n=this,o="invalid setter call for "+g,k,l,m,f,d,q=false,e,p,r=window.jermaine.AttrList,h=window.jermaine.Validator,s=window.jermaine.util.EventEmitter;e=function(i){for(m=0;m<j.length;++m){j[m](i)}return true};l=function(){return(typeof(k)==="function")?k():k};if(g===undefined||typeof(g)!=="string"){throw new Error("Attr: constructor requires a name parameter which must be a string")}this.validatesWith=function(i){if(typeof(i)==="function"){j.push(new h(i));return this}else{throw new Error("Attr: validator must be a function")}};this.defaultsTo=function(i){k=i;return this};this.isImmutable=function(){q=true;return this};this.isMutable=function(){q=false;return this};this.name=function(){return g};this.clone=function(){var t=(this instanceof r)?new r(g):new c(g),u;for(u=0;u<j.length;++u){t.validatesWith(j[u])}t.defaultsTo(k);if(q){t.isImmutable()}return t};this.and=this;this.which=this;this.validator=function(){return e};this.addTo=function(v){var t,u,i;if(!v||typeof(v)!=="object"){throw new Error("Attr: addAttr method requires an object parameter")}i=l();if(i!==undefined&&e(i)){t=i}else{if(i!==undefined&&!e(i)){throw new Error("Attr: Default value of "+i+" does not pass validation for "+g)}}v[g]=function(y){var z=[],w=true,x;if(y!==undefined){if(q&&t!==undefined){throw new Error("cannot set the immutable property "+g+" after it has been set")}else{if(!e(y)){throw new Error(o)}else{if((v instanceof s||v.on&&v.emitter().emit)&&y.on){if(t&&t.emitter().listeners("change").length>0&&typeof(u)==="function"){t.emitter().removeListener("change",u)}u=function(A){for(x=0;x<A.length&&w;++x){if(A[x].origin===v){w=false}}if(w&&A.push){A.push({key:g,origin:v});v.emitter().emit("change",A)}};if(y.on&&y.emitter){y.emitter().on("change",u)}}t=y;z.push({key:g,value:y,origin:v});if((v instanceof s||v.on&&v.emitter().emit)){v.emitter().emit("change",z)}}}return v}else{return t}}};d=function(i){n[i]=function(t){j.push(h.getValidator(i)(t));return n}};for(m=0;m<h.validators().length;++m){d(h.validators()[m])}};b.Attr=c});window.jermaine.util.namespace("window.jermaine",function(a){function b(c){var e=this;a.Attr.call(this,c);var d=function(g,f){return function(){return g[f].apply(g,arguments)}};this.validateWith=this.validatesWith;this.defaultsTo=function(){};this.isImmutable=function(){};this.isMutable=function(){};this.eachOfWhich=this;this.addTo=function(h){var i,f=[],g={};if(!h||typeof(h)!=="object"){throw new Error("AttrList: addTo method requires an object parameter")}else{g.pop=d(f,"pop");g.add=function(j){if((e.validator())(j)){f.push(j);return this}else{throw new Error(e.errorMessage())}};g.replace=function(j,k){if((typeof(j)!=="number")||(parseInt(j,10)!==j)){throw new Error("AttrList: replace method requires index parameter to be an integer")}if(j<0||j>=this.size()){throw new Error("AttrList: replace method index parameter out of bounds")}if(!(e.validator())(k)){throw new Error(e.errorMessage())}f[j]=k;return this};g.at=function(j){if(j<0||j>=this.size()){throw new Error("AttrList: Index out of bounds")}return f[j]};g.get=g.at;g.size=function(){return f.length};h[c]=function(){return g}}}}b.prototype=new window.jermaine.Attr(name);a.AttrList=b});window.jermaine.util.namespace("window.jermaine",function(a){var b=function(c,d){if(!c||typeof(c)!=="string"){throw new Error("Method: constructor requires a name parameter which must be a string")}else{if(!d||typeof(d)!=="function"){throw new Error("Method: second parameter must be a function")}}this.addTo=function(e){if(!e||typeof(e)!=="object"){throw new Error("Method: addTo method requires an object parameter")}e[c]=d}};a.Method=b});window.jermaine.util.namespace("window.jermaine",function(a){function b(x){var i=this,s={},j={},r,n,t,f=true,d=[],p=[],u=[],c=a.Method,w=a.Attr,m=a.AttrList,h=a.util.EventEmitter,g,y,l,k,v=function(){},q=function(){},e=function(){if(f){l()}return q.apply(this,arguments)};if(arguments.length>1){x=arguments[arguments.length-1]}if(x&&typeof(x)==="function"){e=new b();x.call(e);return e}else{if(x){throw new Error("Model: specification parameter must be a function")}}var o=function(B,A){var D,z,C;D=B==="Attr"?w:m;z=B==="Attr"?"hasA":"hasMany";f=true;if(typeof(A)==="string"){C=new D(A);j[A]=C;return C}else{throw new Error("Model: "+z+" parameter must be a string")}};g=function(B,A){var z;if(typeof(A)!=="string"){throw new Error("Model: expected string argument to "+B+" method, but recieved "+A)}z=B==="attribute"?j[A]:s[A];if(z===undefined){throw new Error("Model: "+B+" "+A+" does not exist!")}return z};y=function(B){var A,C=[],z=B==="attributes"?j:s;for(A in z){if(z.hasOwnProperty(A)){C.push(A)}}return C};l=function(A){var D=this,B,z,C;e.validate();q=function(){var H=this,F,G,I,E;if(!(this instanceof e)){throw new Error("Model: instances must be created using the new operator")}E=function(M,L){var K=L==="attributes"?j:s,J;for(J in K){if(K.hasOwnProperty(J)){if(K===j&&k){K[J].isImmutable()}K[J].addTo(M)}}};I=new h();this.emitter=function(){return I};this.on=function(J,K){H.emitter().on(J,function(L){K.call(H,L)})};E(this,"attributes");E(this,"methods");if(r!==undefined){this.toString=r}if(arguments.length>0){if(arguments.length<d.length){C="Constructor requires ";for(F=0;F<d.length;++F){C+=d[F];C+=F===d.length-1?"":", "}C+=" to be specified";throw new Error(C)}else{for(F=0;F<arguments.length;++F){G=F<d.length?d[F]:p[F-d.length];if(e.attribute(G) instanceof m){if(Object.prototype.toString.call(arguments[F])!=="[object Array]"){throw new Error("Model: Constructor requires 'names' attribute to be set with an Array")}else{for(z=0;z<arguments[F].length;++z){this[G]().add(arguments[F][z])}}}else{this[G](arguments[F])}}}}v.call(this)};return q};e.hasA=function(z){return o("Attr",z)};e.hasAn=e.hasA;e.hasSome=e.hasA;e.hasMany=function(z){return o("AttrList",z)};e.isA=function(B){var A,z,D,C;f=true;C=function(F){var E,G=new b();for(E in G){if(G.hasOwnProperty(E)&&typeof(F[E])!==typeof(G[E])){return false}}return true};if(typeof(B)!=="function"||!C(B)){throw new Error("Model: parameter sent to isA function must be a Model")}if(u.length===0){u.push(B)}else{throw new Error("Model: Model only supports single inheritance at this time")}z=u[0].attributes();for(A=0;A<z.length;++A){if(j[z[A]]===undefined){j[z[A]]=u[0].attribute(z[A]).clone();j[z[A]].isMutable()}}D=u[0].methods();for(A=0;A<D.length;++A){if(s[D[A]]===undefined){s[D[A]]=u[0].method(D[A])}}for(A=0;A<u.length;A++){e.prototype=new u[A]()}};e.isAn=e.isA;e.parent=function(){return u[0].apply(this,arguments)};e.attribute=function(z){return g("attribute",z)};e.attributes=function(){return y("attributes")};e.method=function(z){return g("method",z)};e.methods=function(){return y("methods")};e.isBuiltWith=function(){var z=false,A;f=true;d=[];p=[];for(A=0;A<arguments.length;++A){if(typeof(arguments[A])==="string"&&arguments[A].charAt(0)!=="%"){if(z){throw new Error("Model: isBuiltWith requires parameters preceded with a % to be the final parameters before the optional function")}else{d.push(arguments[A])}}else{if(typeof(arguments[A])==="string"&&arguments[A].charAt(0)==="%"){z=true;p.push(arguments[A].slice(1))}else{if(typeof(arguments[A])==="function"&&A===arguments.length-1){v=arguments[A]}else{throw new Error("Model: isBuiltWith parameters must be strings except for a function as the optional final parameter")}}}}};e.isImmutable=function(){k=true};e.looksLike=function(z){f=true;r=z};e.respondsTo=function(A,B){var z=new c(A,B);f=true;s[A]=z};e.validate=function(){var B,A=this.attributes(),z=this.methods();for(B=0;B<d.length;++B){try{this.attribute(d[B])}catch(C){throw new Error(d[B]+", specified in the isBuiltWith method, is not an attribute")}}for(B=0;B<p.length;++B){try{this.attribute(p[B])}catch(C){throw new Error(p[B]+", specified in the isBuiltWith method, is not an attribute")}}for(B=0;B<A.length;B++){if(z.indexOf(A[B])>-1){throw new Error("Model: invalid model specification to "+A[B]+" being both an attribute and method")}}if(k){for(B=0;B<A.length;B++){if(d.indexOf(A[B])<0){throw new Error("immutable objects must have all attributes required in a call to isBuiltWith")}}}f=false};return e}a.Model=b});